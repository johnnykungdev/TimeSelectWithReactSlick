{"version":3,"sources":["App.module.scss","components/InfoPage/InfoPage.module.scss","container/TimeSelection/TimeSelection.module.scss","components/TeacherDiv/TeacherDiv.module.scss","container/TeacherSelection/TeacherSelection.module.scss","components/customArrows/CustomNextArrow.module.scss","components/customArrows/CustomPrevArrow.module.scss","components/CustomSlide/CustomSlide.module.scss","Layout/TimeSelectLayout.module.scss","container/SimpleSlider/SimpleSlider.module.scss","UI/Modal/Modal.module.scss","UI/Backdrop/Backdrop.module.scss","components/customArrows/ToRightArr.svg","components/customArrows/ToLeftArr.svg","components/InfoPage/InfoPage.js","components/TeacherDiv/TeacherDiv.js","container/TeacherSelection/masterGrpList.js","container/TeacherSelection/TeacherSelection.js","components/customArrows/CustomNextArrow.js","components/customArrows/CustomPrevArrow.js","components/CustomSlide/CustomSlide.js","container/SimpleSlider/masterGrp/index.js","container/SimpleSlider/SimpleSlider.js","container/TimeSelection/TimeSelection.js","Layout/TimeSelectLayout.js","App.js","store/action/actions.js","store/action/actionTypes.js","serviceWorker.js","store/reducer/reducer.js","index.js"],"names":["module","exports","infoPage","props","className","classes","FormContainer","InfoForm","autoComplete","required","placeholder","value","chineseName","name","InfoInput","onChange","e","onChangeHandler","phoneNumber","onClick","nextStep","teacherDiv","TeacherDiv","onSelectMasterGroup","masterGid","TeacherImg","src","imgSrc","alt","TeacherInfo","groupName","teacherIntro","masterGidList","group","descript","teachderSelection","state","teachersList","console","log","this","setState","teacherDivs","length","forEach","masterGrp","index","push","key","TeacherSelectionPage","PrevStepButton","prevStep","id","spaceDiv","Component","customNextArrow","ArrowContainer","nextArrow","customPrevArrow","prevArrow","customSlide","currentDay","dateObject","getDay","onSelectDate","CurrentDateSlide","slideIndex","selectDateHandler","setCurrentIndex","getMonth","getDate","Slide","masterGrpList","SimpleSlider","currentSlideIndex","dateListArr","newDateListArrLength","dateTimeList","seletedDate","setDateTimeString","year_string","getFullYear","month_string","date_string","datetime_string","onSelectDateTime","datetime","find","date","setSelectedDate_timeList","time_list","intializeTimeList","currentDateObject","Date","generated_date_list","i","next_date","generat_date_list","prevState","cloned_dateListArr","last_ele_in_dateListArr","settings","accessibility","infinite","speed","slidesToShow","slidesToScroll","swipe","adaptiveHeight","arrows","CustomNextArrow","CustomPrevArrow","afterChange","currentIndex","responsive","breakpoint","initialSlide","slickGoTo","innerSliders","map","ele","CustomSlide","slider","onSelectTimeHandler","SliderContainer","ref","TimeSelection","onClickHandler","number","onSelectClassTimeHandler","onCancelClickHandler","cancelClassTimeHandler","classTime","selectedDate_timeList","timePeriodDivs","time","TimePeriodDiv","InfoDiv","master_id","ReserveButton","makeReservation","TimeDivsContainer","timeSelectLayout","setSeletedDateTimeListHandler","App","engName","masterId","step","isConfirming","dateTimeString","InfoPage","TeacherSelection","TimeSelectLayout","style","textAlign","connect","dispatch","language_of_name","type","updatedValue","target","event","actions","teacherName","datetimestring","timeList","Boolean","window","location","hostname","match","initialState","reducer","action","alert","year","month","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c244069.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormContainer\":\"InfoPage_FormContainer__3lf2Y\",\"InfoForm\":\"InfoPage_InfoForm__k-6hH\",\"InfoInput\":\"InfoPage_InfoInput__1b9MQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TimePeriodDiv\":\"TimeSelection_TimePeriodDiv__3FnlP\",\"InfoDiv\":\"TimeSelection_InfoDiv__1Kdfc\",\"ReserveButton\":\"TimeSelection_ReserveButton__RaiTe\",\"CancelButton\":\"TimeSelection_CancelButton__1FKoj\",\"ButtonContainer\":\"TimeSelection_ButtonContainer__uTNod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeacherDiv\":\"TeacherDiv_TeacherDiv__1-UMf\",\"TeacherImg\":\"TeacherDiv_TeacherImg__1jhIO\",\"TeacherInfo\":\"TeacherDiv_TeacherInfo__2wpf7\",\"SelectedTeacherInfo\":\"TeacherDiv_SelectedTeacherInfo__3ErBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TeacherSelectionPage\":\"TeacherSelection_TeacherSelectionPage__3JpH3\",\"spaceDiv\":\"TeacherSelection_spaceDiv__3FTst\",\"PrevStepButton\":\"TeacherSelection_PrevStepButton__2Xw3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArrowContainer\":\"CustomNextArrow_ArrowContainer__w_XZm\",\"nextArrow\":\"CustomNextArrow_nextArrow__1YXlg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ArrowContainer\":\"CustomPrevArrow_ArrowContainer__1_VIZ\",\"prevArrow\":\"CustomPrevArrow_prevArrow__NSbZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Slide\":\"CustomSlide_Slide__6IXYD\",\"CurrentDateSlide\":\"CustomSlide_CurrentDateSlide__Lg6l6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeSelectLayout\":\"TimeSelectLayout_timeSelectLayout__10i35\",\"spaceDiv\":\"TimeSelectLayout_spaceDiv__J9Z8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SliderContainer\":\"SimpleSlider_SliderContainer__2hGow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2dfOw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3Mwgx\"};","module.exports = __webpack_public_path__ + \"static/media/ToRightArr.a0e061b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ToLeftArr.6c9efe0c.svg\";","import React from 'react';\n\nimport classes from './InfoPage.module.scss';\n\nconst infoPage = (props) => {\n    return (\n        <div className={classes.FormContainer}>\n            <h2>請輸入您的姓名</h2>\n            <p>※ 不可為匿名使用 <span>(必填)</span></p>\n            <form className={classes.InfoForm}>\n                <label>\n                    姓名\n                </label>\n                <input\n                    autoComplete='off'\n                    required\n                    placeholder='請輸入您的姓名'\n                    value={props.chineseName}\n                    name='chineseName'\n                    className={classes.InfoInput}\n                    onChange={(e) => props.onChangeHandler(e, 'chineseName')}/>\n                <label>\n                    手機號碼\n                </label>\n                <input\n                    autoComplete='off'\n                    required\n                    placeholder='請輸入您的手機號碼'\n                    value={props.phoneNumber}\n                    name='phoneNumber'\n                    className={classes.InfoInput}\n                    onChange={(e) => props.onChangeHandler(e, 'phoneNumber')}/>\n                <button\n                    onClick={props.nextStep}>\n                    下一步\n                </button>\n\n            </form>\n\n        </div>\n    )\n}\n\nexport default infoPage;","import React from 'react';\n\nimport classes from './TeacherDiv.module.scss';\n\nconst teacherDiv = (props) => {\n    // if (props.selected === true){\n    //     return (\n    //         <div \n    //             className={classes.TeacherDiv}\n    //             onClick={() => props.onSelectMasterGroup(props.masterGid)}>\n    //             <img className={classes.TeacherImg} src={props.imgSrc} alt={props.imgSrc}/>\n    //             <div className={classes.SelectedTeacherInfo}>\n    //                 <h2>{props.teacherName}</h2>\n    //                 <p>{props.teacherIntro}</p>\n    //             </div>\n    //         </div>\n    //     )\n    // } else {\n        return (\n            <div \n                className={classes.TeacherDiv}\n                onClick={() => props.onSelectMasterGroup(props.masterGid)}>\n                <img className={classes.TeacherImg} src={props.imgSrc} alt={`${props.imgSrc}`}/>\n                <div className={classes.TeacherInfo}>\n                    <h2>{props.groupName}</h2>\n                    <p>{props.teacherIntro}</p>\n                </div>\n            </div>\n        )\n    // }\n}\n\nexport default teacherDiv;","export const masterGidList = [\n    { \n        imgSrc: 'https://image.cache.storm.mg/styles/smg-800x533-fp/s3/media/image/2017/03/27/20170327-113231_U7418_M261922_9159.GIF?itok=SyEQvDBT',\n        group: '師傅群組1',\n        descript: '介紹介紹介紹',\n        masterGid: 1\n    }, \n    {\n        imgSrc: 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/%E6%B3%AB%E9%9B%85-1565166529.png?crop=0.498xw:0.997xh;0,0.00321xh&resize=640:*',\n        group: '師傅群組2',\n        descript: '介紹介紹介紹',\n        masterGid: 2\n    },\n    {\n        imgSrc: 'https://s1.r29static.com//bin/entry/520/720x864,85/2121135/image.webp',\n        group: '師傅群組3',\n        descript: '介紹介紹介紹',\n        masterGid: 3\n    },\n    {\n        imgSrc: 'https://akns-images.eonline.com/eol_images/Entire_Site/20171119/rs_1024x576-171219083111-1024.eminem.121917.jpg?fit=inside|900:auto&output-quality=90',\n        group: '師傅群組4',\n        descript: '介紹介紹介紹',\n        masterGid: 4\n    },\n    {\n        imgSrc: 'https://yt3.ggpht.com/a/AGF-l7_WkQqGTL_xIsc1fCFiOv3OhQ0zaVZzgo8MuA=s900-c-k-c0xffffffff-no-rj-mo',\n        group: '師傅群組5',\n        descript: '介紹介紹介紹',\n        masterGid: 5\n    }\n]","import React, { Component } from 'react';\n\nimport TeacherDiv from '../../components/TeacherDiv/TeacherDiv';\n\nimport { masterGidList } from './masterGrpList.js';\n\nimport classes from './TeacherSelection.module.scss';\n\nclass teachderSelection extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    state = {\n        teachersList: []\n    }\n\n    componentDidMount(){\n        // fetch('http://34.80.113.242:8000/api/group/get/', {\n        //     method: 'GET',\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //         'mode': 'cors'\n        //     }\n        // })\n        // .then(res => res.json())\n        // .then(data => {\n        //     console.log(data.info);\n        //     this.setState({\n        //     teachersList: data.infos\n        // })})\n        // .catch(err => console.log(err));\n\n        console.log('mounted');\n\n        this.setState({\n            teachersList: masterGidList\n        })\n    }\n\n    render(){\n        let teacherDivs = [];\n        console.log(this.props);\n        console.log(this.state);\n        if (this.state.teachersList.length !== 0){\n            this.state.teachersList.forEach((masterGrp, index) => {\n                // if (teacher.masterGid === this.props.masterGid){\n                //     teacherDivs.push(\n                //         <TeacherDiv\n                //             key={teacher.teacherName}\n                //             imgSrc={teacher.imgSrc}\n                //             teacherName={teacher.teacherName}\n                //             masterGid={teacher.masterGid}\n                //             teacherIntro={teacher.teacherIntro}\n                //             onSelectMasterGroup={this.props.onSelectMasterGroup}\n                //             selected={true}\n                //         />\n                //     )\n                // } \n                // else {\n                    teacherDivs.push(\n                        <TeacherDiv\n                            key={masterGrp.group}\n                            imgSrc={masterGrp.imgSrc}\n                            groupName={masterGrp.group}\n                            masterGid={index+1}\n                            teacherIntro={masterGrp.descript}\n                            onSelectMasterGroup={this.props.onSelectMasterGroup}\n                        />\n                    )\n                // }\n            })\n        }\n\n        return (\n            <div className={classes.TeacherSelectionPage}>\n                <div>\n                    <button\n                        className={classes.PrevStepButton}\n                        onClick={this.props.prevStep}>\n                        上一步\n                    </button>\n                    <h2>請選擇老師</h2>\n                    <div id={classes.spaceDiv}></div>\n                </div>\n                {teacherDivs}\n            </div>\n        )\n    }\n}\n\nexport default teachderSelection;","import React from 'react';\nimport arrSvg from './ToRightArr.svg';\n\nimport classes from './CustomNextArrow.module.scss';\n\nconst customNextArrow = (props) => {\n\n    return (\n        <div \n            className={classes.ArrowContainer} \n            onClick={props.onClick}\n        >\n            <span className={classes.nextArrow}></span>\n            {/* <img \n                src={arrSvg}\n\n                style={{...props.style, height: '25px', display: 'block', width: '25px', margin: '0'}}/> */}\n        </div>\n    )\n}\n\nexport default customNextArrow;","import React from 'react';\nimport arrSvg from './ToLeftArr.svg';\n\nimport classes from './CustomPrevArrow.module.scss';\n\nconst customPrevArrow = (props) => {\n    return (\n        <div \n            className={classes.ArrowContainer}\n            onClick={props.onClick}\n        >\n            <span className={classes.prevArrow}></span>\n            {/* <img \n                src={arrSvg} \n\n                style={{...props.style, height: '25px', display: 'block', width: '25px', margin: '0', display: 'inline-block'}}/> */}\n        </div>\n    )\n}\n\nexport default customPrevArrow;","import React from 'react';\n\nimport classes from './CustomSlide.module.scss';\n\nconst customSlide = (props) => {\n    const ch_dayArr = [\n        '日',\n        'ㄧ',\n        '二',\n        '三',\n        '四',\n        '五',\n        '六',\n    ]\n\n    const currentDay = ch_dayArr[props.dateObject.getDay()];\n\n    if (props.dateObject === props.onSelectDate){\n        return (\n            <div \n                className={classes.CurrentDateSlide}\n                onClick={() => {\n                    console.log(props.dateObject)\n                    console.log(props.slideIndex);\n                    props.selectDateHandler(props.dateObject);\n                    props.setCurrentIndex(props.slideIndex - 1)\n                }}>\n                <h4>\n                    {\n                        `${props.dateObject.getMonth()+1}` + '/' +\n                        `${props.dateObject.getDate()}` + \n                        `(${currentDay})`\n                    }\n                </h4>\n            </div>\n        )\n    } else {\n        return (\n            <div \n                className={classes.Slide}\n                onClick={() => {\n                    console.log(props.dateObject);\n                    console.log(props.slideIndex);\n                    props.selectDateHandler(props.dateObject);\n                    props.setCurrentIndex(props.slideIndex - 1)\n            }}>\n                <h4>\n                    {\n                        `${props.dateObject.getMonth()+1}` + '/' +\n                        `${props.dateObject.getDate()}`\n                    }\n                </h4>\n            </div>\n        )\n    }\n}\n\nexport default customSlide;","import masterGrp1 from './masterGrp1.json';\nimport masterGrp2 from './masterGrp2.json';\nimport masterGrp3 from './masterGrp3.json';\n\nexport const masterGrpList = [ masterGrp1, masterGrp2, masterGrp3 ];","import React, { Component } from 'react';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport CustomNextArrow from '../../components/customArrows/CustomNextArrow';\nimport CustomPrevArrow from '../../components/customArrows/CustomPrevArrow';\nimport CustomSlide from '../../components/CustomSlide/CustomSlide';\n\nimport * as actions from '../../store/action/actions';\n\nimport classes from './SimpleSlider.module.scss';\n\nimport { masterGrpList } from './masterGrp/index';\n\nclass SimpleSlider extends Component {\n    state = {\n        currentSlideIndex: 0,\n        onSelectDate: '',\n        dateListArr: [],\n        newDateListArrLength: 0,\n        dateTimeList: null\n    }\n\n    componentDidMount(){\n        console.log('SimpleSlider', 'componentDidMount');\n        const currentDateObject = new Date();\n\n        this.props.setDateTimeString(currentDateObject);\n\n        const generated_date_list = [];\n\n        const generat_date_list = (generated_date_list, currentDateObject) => {\n            for (let i = 0; i < 20; i++){\n                if ( i === 0 ){\n                    generated_date_list.push(currentDateObject);\n                    console.log('first object');\n                } else {\n                    const next_date = new Date(\n                        currentDateObject.getFullYear(),\n                        currentDateObject.getMonth(),\n                        currentDateObject.getDate() + i\n                    )\n                    generated_date_list.push(next_date);\n                }\n            }\n            this.setState({\n                onSelectDate: currentDateObject,\n                dateListArr: generated_date_list,\n            })\n        }\n\n        generat_date_list(generated_date_list, currentDateObject);\n\n        console.log(masterGrpList[this.props.masterGid - 1]);\n        const intializeTimeList = () => {\n            const year_string = `${currentDateObject.getFullYear()}`;\n            const month_string = (\n                currentDateObject.getMonth() + 1> 10?\n                `${currentDateObject.getMonth() + 1}`: '0' + `${currentDateObject.getMonth() + 1}`\n            )\n            const date_string = (\n                currentDateObject.getDate() > 10?\n                `${currentDateObject.getDate()}`: '0' + `${currentDateObject.getDate()}`\n            )\n\n            const datetime_string = year_string + month_string + date_string;\n            const onSelectDateTime = masterGrpList[this.props.masterGid-1].datetime.find((date) => {\n                return date.date === datetime_string;\n            })\n            console.log(onSelectDateTime);\n\n            if(onSelectDateTime){\n                return onSelectDateTime.time_list;\n            } else {\n                return null;\n            }\n        }\n\n        console.log(intializeTimeList());\n        this.props.setSelectedDate_timeList(intializeTimeList());\n    }\n\n    componentDidUpdate(prevState){\n        console.log('componentDidUpdate, currentSlideIndex =', this.state.currentSlideIndex)\n        console.log('componentDidUPdate', this.state.onSelectDate);\n\n        if ( this.state.currentSlideIndex + 20 > this.state.dateListArr.length){\n            const cloned_dateListArr = [...this.state.dateListArr];\n            const last_ele_in_dateListArr = cloned_dateListArr[cloned_dateListArr.length -1];\n\n            for (let i = 1; i <= 3; i++){\n                cloned_dateListArr.push(\n                    new Date(\n                        last_ele_in_dateListArr.getFullYear(),\n                        last_ele_in_dateListArr.getMonth(),\n                        last_ele_in_dateListArr.getDate() + i\n                    )\n                )\n            }\n\n            this.setState({\n                dateListArr: cloned_dateListArr\n            })\n        } else {\n            return ;\n        }\n    }\n\n    selectDateHandler = (seletedDate) => {\n        this.setState({\n            onSelectDate: seletedDate\n        })\n        \n        this.props.setDateTimeString(seletedDate);\n\n        const intializeTimeList = () => {\n            const year_string = `${seletedDate.getFullYear()}`;\n            const month_string = (\n                seletedDate.getMonth() + 1> 10?\n                `${seletedDate.getMonth() + 1}`: '0' + `${seletedDate.getMonth() + 1}`\n            )\n            const date_string = (\n                seletedDate.getDate() > 10?\n                `${seletedDate.getDate()}`: '0' + `${seletedDate.getDate()}`\n            )\n\n            const datetime_string = year_string + month_string + date_string;\n            const onSelectDateTime = masterGrpList[this.props.masterGid-1].datetime.find((date) => {\n                console.log(date.date);\n                console.log(date_string);\n                return date.date === datetime_string;\n            })\n            console.log(onSelectDateTime);\n\n            if(onSelectDateTime){\n                this.props.setSelectedDate_timeList(onSelectDateTime.time_list)\n            } else {\n                this.props.setSelectedDate_timeList('no free time');\n            }\n        }\n\n        intializeTimeList();\n    }\n\n    render(){\n        console.log(this.state.onSelectDateTime);\n        var settings = {\n            accessibility: true,\n            infinite: false,\n            speed: 300,\n            slidesToShow: 3,\n            slidesToScroll: 3,\n            swipe: false,\n            adaptiveHeight: true,\n            arrows: true,\n            nextArrow: <CustomNextArrow />, \n            prevArrow: <CustomPrevArrow />,\n            afterChange: (currentIndex) => {\n                console.log(currentIndex);\n                this.setState({\n                    currentSlideIndex: currentIndex\n                })\n            },\n            responsive: [\n                {\n                    breakpoint: 600,\n                    settings: {\n                      slidesToShow: 3,\n                      slidesToScroll: 3,\n                      initialSlide: 0\n                    }\n                }\n            ],\n            slickGoTo: this.state.slickGoTo\n        };\n\n        const innerSliders = this.state.dateListArr.map((ele, index) => {\n            return (\n                <CustomSlide\n                    key={'sliderIndex' + index}\n                    dateObject={ele} \n                    onSelectDate={this.state.onSelectDate}\n                    slideIndex={index}\n                    selectDateHandler={this.selectDateHandler}\n                    setCurrentIndex={this.slider.slickGoTo}\n                    onSelectTimeHandler={this.props.onSelectTimeHandler}/>\n            )\n        })\n\n        return (\n            <div className={classes.SliderContainer}>\n                <Slider ref={ slider => (this.slider = slider)} {...settings} >\n                    {innerSliders}\n                </Slider>\n            </div>                \n        )\n    }\n}\n\nexport default SimpleSlider;","import React, { Component } from 'react';\n\nimport classes from './TimeSelection.module.scss';\n\nclass TimeSelection extends Component {\n    constructor(props){\n        super(props);\n    }\n\n    componentDidMount(){\n        console.log('TimeSelection, componentDidMount');\n\n    }\n\n    onClickHandler = (e, number) => {\n        this.props.onSelectClassTimeHandler(e, number);\n    }\n\n    onCancelClickHandler = (e) => {\n        this.props.cancelClassTimeHandler(e);\n    }\n\n    render(){\n        const timePeriodArr = [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n        console.log('timeSelection', this.props.classTime);\n        console.log(this.props.selectedDate_timeList);\n\n        let timePeriodDivs = [];\n\n        if(this.props.selectedDate_timeList !== 'no free time' && this.props.selectedDate_timeList){\n            this.props.selectedDate_timeList.map((time) => {\n                timePeriodDivs.push(\n                    <div className={classes.TimePeriodDiv}>\n                        <div className={classes.InfoDiv}>\n                            <p>師傅:{time.master_id}</p>\n                            <p>時間: {time.time}</p>\n                        </div>\n                        <button \n                            id={classes.ReserveButton}\n                            onClick={() => this.props.makeReservation(null, time.master_id)}>\n                            預約\n                        </button>\n                    </div>\n                )\n            })\n        } else {\n            timePeriodDivs = [\n                <div>\n                    <h3>此天無可預約時段</h3>\n                </div>\n            ]\n        }\n\n        return (\n            <div className={classes.TimeDivsContainer}>\n                {timePeriodDivs}\n            </div>\n        )\n    }\n}\n\nexport default TimeSelection;","import React from 'react';\n\nimport SimpleSlider from '../container/SimpleSlider/SimpleSlider';\nimport TimeSelection from '../container/TimeSelection/TimeSelection';\n\nimport classes from './TimeSelectLayout.module.scss';\n\nconst timeSelectLayout = (props) => {\n    return (\n        <div className={classes.timeSelectLayout}>\n            <div>\n                <button\n                    onClick={props.prevStep}>上一步</button>\n                <h2>請選擇時間</h2>\n                <div id={classes.spaceDiv}></div>\n            </div>\n            <SimpleSlider \n                setDateTimeString={props.setDateTimeString}\n                setSeletedDateTimeListHandler={props.setSeletedDateTimeListHandler}\n                masterGid={props.masterGid}\n                setSelectedDate_timeList={props.setSelectedDate_timeList}/>\n            <TimeSelection \n                datetime_string={props.datetime_string}\n                selectedDate_timeList={props.selectedDate_timeList}\n                onSelectClassTimeHandler={props.onSelectClassTimeHandler}\n                makeReservation={props.makeReservation}/>\n        </div>\n    )\n}\n\nexport default timeSelectLayout;","import React, { Component } from 'react';\nimport classes from './App.module.scss';\nimport { connect } from 'react-redux';\n\nimport InfoPage from './components/InfoPage/InfoPage';\nimport TeacherSelection from './container/TeacherSelection/TeacherSelection';\nimport TimeSelectLayout from './Layout/TimeSelectLayout';\nimport Confirmation from './components/Confirmation/Cofirmation';\n\nimport * as actions from './store/action/actions';\n\nclass App extends Component {\n    state = {\n        chineseName: '',\n        engName: '',\n        masterId: '',\n        step: 'info_page',\n        datetime_string: '',\n        isConfirming: false,\n        selectedDate_timeList: null\n    }\n\n    makeReservation = (dateTimeString, masterId) => {\n        this.setState({\n            datetime_string: dateTimeString,\n            masterId: masterId\n        })\n\n        this.props.nextStep();\n    }\n\n    render(){\n        console.log(this.props);\n        if (this.props.step === 'info_page'){\n            return (\n                <div className={classes.App}>\n                    <InfoPage \n                        onChangeHandler={this.props.onChangeHandler}\n                        chineseName={this.props.chineseName}\n                        engName={this.props.engName}\n                        nextStep={this.props.nextStep}/>\n                </div>\n            );\n        } else if (this.props.step === 'teacher_select'){\n            return (\n                <div className={classes.App}>\n                    <TeacherSelection\n                        masterGid={this.props.masterGid}\n                        onSelectMasterGroup={this.props.onSelectMasterGroup}\n                        nextStep={this.props.nextStep}\n                        prevStep={this.props.prevStep}/>\n                </div>\n            )\n        } else if (this.props.step === 'time_select'){\n            return (\n                <div className={classes.App}>\n                    <TimeSelectLayout\n                        prevStep={this.props.prevStep}\n                        masterGid={this.props.masterGid}\n                        datetime_string={this.props.datetime_string}\n                        setDateTimeString={this.props.setDateTimeString}\n                        selectedDate_timeList={this.props.selectedDate_timeList}\n                        setSelectedDate_timeList={this.props.setSelectedDate_timeList}\n                        makeReservation={this.makeReservation}/>\n                </div>\n            )\n        } else if (this.props.step === 'finished'){\n            console.log(this.props.datetime_string);\n            return (\n                <div className={classes.App}>\n                    <div style={{ textAlign: 'center' }}>\n                        <h3>已完成預約！</h3>\n                        <p>姓名：{this.props.chineseName}</p>\n                        <p>師傅：{this.state.masterId}</p>\n                        <p>時間：{this.props.datetime_string.getFullYear()}年\n                                {this.props.datetime_string.getMonth()+1}月\n                                {this.props.datetime_string.getDate()}日\n                        </p>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        chineseName: state.chineseName,\n        phoneNumber: state.phoneNumber,\n        masterGid: state.masterGid,\n        step: state.step,\n        selectedDate_timeList: state.selectedDate_timeList,\n        datetime_string: state.datetime_string\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onChangeHandler: (e, language_of_name) => dispatch(actions.onChangeHandler(e, language_of_name)),\n        onSelectMasterGroup: (teacherName) => dispatch(actions.onSelectMasterGroup(teacherName)),\n        nextStep: () => dispatch(actions.nextStep()),\n        prevStep: () => dispatch(actions.prevStep()),\n        setDateTimeString: (datetimestring) => dispatch(actions.setDateTimeString(datetimestring)),\n        setSelectedDate_timeList: (timeList) => dispatch(actions.setSelectedDate_timeList(timeList)),\n    }\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from './actionTypes';\n\nexport const onChangeHandler = (e, language_of_name) => {\n    return {\n        type: actionTypes.CHANGE_NAME,\n        language_of_name: language_of_name,\n        updatedValue: e.target.value,\n        event: e\n    }\n}\n\nexport const onSelectMasterGroup = (masterGid) => {\n    return {\n        type: actionTypes.SELECT_MASTER_GROUP,\n        masterGid: masterGid\n    }\n}\n\nexport const nextStep = () => {\n    return {\n        type: actionTypes.NEXT_STEP,\n    }\n}\n\nexport const prevStep = () => {\n    return {\n        type: actionTypes.PREV_STEP\n    }\n}\n\nexport const setDateTimeString = (datetime_string) => {\n    return {\n        type: actionTypes.SET_DATE_TIME_STRING,\n        datetime_string: datetime_string\n    }\n}\n\nexport const setSelectedDate_timeList = (timeList) => {\n    return {\n        type: actionTypes.SET_SELECTED_DATE_TIME_LIST,\n        timeList: timeList\n    }\n}\n","export const CHANGE_NAME = 'CHANGE__NAME';\nexport const SELECT_MASTER_GROUP = 'SELECT_MASTER_GROUP';\nexport const NEXT_STEP = 'NEXT_STEP';\nexport const PREV_STEP = 'PREV_STEP';\n\nexport const SET_INITIAL_DATE = 'SET_INITIAL_DATE';\nexport const SET_SELECTED_DATE_TIME_LIST = 'SET_SELECTED_DATE_TIME_LIST';\nexport const SELECT_TIME = 'SELECT_TIME';\nexport const SET_DATE_TIME_STRING = 'SET_DATE_TIME_STRING';\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../action/actionTypes';\n\nconst initialState = {\n    chineseName: '',\n    phoneNumber: null,\n    masterId: '',\n    masterGid: null,\n    step: 'info_page',\n    selectedDate_timeList: null,\n    datetime_string: null\n}\n\nconst reducer = ( state = initialState , action ) => {\n    switch(action.type){\n        case actionTypes.CHANGE_NAME:\n            if (action.language_of_name === 'chineseName'){\n                return {\n                    ...state,\n                    chineseName: action.updatedValue\n                }\n            } else if (action.language_of_name === 'phoneNumber'){\n                return {\n                    ...state,\n                    phoneNumber: action.updatedValue\n                }\n            } \n            else {\n                return state;\n            }\n        break;\n        \n        case actionTypes.SELECT_MASTER_GROUP:\n            return {\n                ...state,\n                masterGid: action.masterGid,\n                step: 'time_select'\n            }\n        break;\n\n        case actionTypes.NEXT_STEP:\n            if (state.step === 'info_page'){\n                if (state.chineseName !== '' && state.engName !== ''){\n                    return {\n                        ...state,\n                        step: 'teacher_select'\n                    }\n                } else {\n                    console.log('請確實填寫姓名');\n                    alert('請確實填寫資訊!!');\n                    return state;\n                }\n            } else {\n                return {\n                    ...state,\n                    step: 'finished'\n                }\n            }\n\n\n        case actionTypes.PREV_STEP:\n            if (state.step === 'teacher_select'){\n                return {\n                    ...state,\n                    step: 'info_page',\n                    teacherName: ''\n                }\n            } else if (state.step === 'time_select'){\n                return {\n                    ...state,\n                    step: 'teacher_select',\n                    classTime: ''\n                }\n            } else {\n                return state;\n            }\n        break;\n\n        case actionTypes.SET_INITIAL_DATE:\n            return {\n                ...state,\n                year: action.year,\n                month: action.month,\n                date: action.date\n            }\n        break;\n\n        case actionTypes.SET_DATE_TIME_STRING:\n            return {\n                ...state,\n                datetime_string: action.datetime_string\n            }\n\n        case actionTypes.SET_SELECTED_DATE_TIME_LIST:\n            return {\n                ...state,\n                selectedDate_timeList: action.timeList\n            }\n\n        case actionTypes.SELECT_TIME:\n            return {\n                ...state,\n                \n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport reducer from './store/reducer/reducer';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}